name: A2A Research Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  # Achtung: GitHub Actions läuft in UTC. Diese Cron deckt ca. 07–19 CET / 06–18 CEST ab (Mo–Fr, stündlich).
  schedule:
    - cron: "0 8-19 * * 1-5" #correspondst 09:00 am until 08:00 pm CET

permissions:
  contents: read

concurrency:
  group: a2a-research-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install OS packages for WeasyPrint
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2 libpango-1.0-0 libpangoft2-1.0-0 libgdk-pixbuf2.0-0 libffi-dev libxml2 libxslt1.1 fonts-dejavu-core

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt

      - name: Run tests
        run: python -m pytest -q

  run-orchestrator:
    runs-on: ubuntu-latest
    needs: build-and-test
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install OS packages for WeasyPrint
        run: |
          sudo apt-get update
          sudo apt-get install -y libcairo2 libpango-1.0-0 libpangoft2-1.0-0 libgdk-pixbuf2.0-0 libffi-dev libxml2 libxslt1.1 fonts-dejavu-core

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Preflight env check
        env:
          GOOGLE_CLIENT_ID:      ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET:  ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN:  ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          HUBSPOT_ACCESS_TOKEN:  ${{ secrets.HUBSPOT_ACCESS_TOKEN }}
          HUBSPOT_PORTAL_ID:     ${{ secrets.HUBSPOT_PORTAL_ID }}
          SMTP_HOST:             ${{ secrets.SMTP_HOST }}
          SMTP_PORT:             ${{ secrets.SMTP_PORT }}
          SMTP_USER:             ${{ secrets.SMTP_USER }}
          SMTP_PASS:             ${{ secrets.SMTP_PASS }}
          SMTP_SECURE:           ${{ secrets.SMTP_SECURE }}
          MAIL_FROM:             ${{ secrets.MAIL_FROM }}
        run: |
          set -e
          for v in GOOGLE_CLIENT_ID GOOGLE_CLIENT_SECRET GOOGLE_REFRESH_TOKEN HUBSPOT_ACCESS_TOKEN HUBSPOT_PORTAL_ID SMTP_HOST SMTP_PORT SMTP_USER SMTP_PASS SMTP_SECURE MAIL_FROM; do
            if [ -z "${!v}" ]; then
              echo "::error::Missing required env $v"
              exit 1
            else
              echo "$v=✓"
            fi
          done

      - name: Run orchestrator
        if: ${{ always() }}
        env:
          PYTHONPATH:           ${{ env.PYTHONPATH }}
          GOOGLE_CLIENT_ID:     ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          HUBSPOT_ACCESS_TOKEN: ${{ secrets.HUBSPOT_ACCESS_TOKEN }}
          HUBSPOT_PORTAL_ID:    ${{ secrets.HUBSPOT_PORTAL_ID }}
          SMTP_HOST:            ${{ secrets.SMTP_HOST }}
          SMTP_PORT:            ${{ secrets.SMTP_PORT }}
          SMTP_USER:            ${{ secrets.SMTP_USER }}
          SMTP_PASS:            ${{ secrets.SMTP_PASS }}
          SMTP_SECURE:          ${{ secrets.SMTP_SECURE }}
          MAIL_FROM:            ${{ secrets.MAIL_FROM }}
        run: python -m core.orchestrator

      - name: Upload outputs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            output/**
            logs/workflows/**
            **/*.pdf
          if-no-files-found: ignore
