name: A2A Research Workflow CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: pytest

  run-orchestrator:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Preflight env check
        env:
          GOOGLE_CLIENT_ID_V2: ${{ secrets.GOOGLE_CLIENT_ID_V2 }}
          GOOGLE_CLIENT_SECRET_V2: ${{ secrets.GOOGLE_CLIENT_SECRET_V2 }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        run: |
          set -e
          for v in GOOGLE_CLIENT_ID_V2 GOOGLE_CLIENT_SECRET_V2 GOOGLE_REFRESH_TOKEN; do
            if [ -z "${!v}" ]; then
              echo "::error::Missing required env $v"
              exit 1
            else
              echo "$v=âœ“"
            fi
          done

      - name: Run orchestrator
        env:
          GOOGLE_CLIENT_ID_V2: ${{ secrets.GOOGLE_CLIENT_ID_V2 }}
          GOOGLE_CLIENT_SECRET_V2: ${{ secrets.GOOGLE_CLIENT_SECRET_V2 }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
          HUBSPOT_ACCESS_TOKEN: ${{ secrets.HUBSPOT_ACCESS_TOKEN }}
          EMAIL_SMTP_HOST: ${{ secrets.EMAIL_SMTP_HOST }}
          EMAIL_SMTP_USER: ${{ secrets.EMAIL_SMTP_USER }}
          EMAIL_SMTP_PASS: ${{ secrets.EMAIL_SMTP_PASS }}
        run: |
          set -e
          if [ -f scripts/a2a_run.py ]; then
            python scripts/a2a_run.py
          elif [ -f a2a_run.py ]; then
            python a2a_run.py
          else
            file=$(find . -type f -name "*orchestrator*.py" | head -n1)
            if [ -n "$file" ]; then
              python "$file"
            else
              echo "No entrypoint found"
              exit 1
            fi
          fi
