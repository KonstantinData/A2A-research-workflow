"""Summarise internal customer research findings.

This agent combines information from the internal and external level 2
customer searches and produces a human readable summary.  The
implementation here is deliberately simple: it reads the artefacts
generated by the level 2 agents (if present) and returns a list of
textual notes.  In a production workflow this function might apply
scoring, deduplication or cross‑reference internal sales data.
"""

from __future__ import annotations

import json
from pathlib import Path
from typing import Any, Dict, List

Normalized = Dict[str, Any]


def _read_artifact(filename: str) -> List[str]:
    path = Path("artifacts") / filename
    try:
        text = path.read_text(encoding="utf-8")
        data = json.loads(text)
        if isinstance(data, list):
            return [str(x) for x in data]
    except Exception:
        pass
    return []


def run(trigger: Normalized) -> Normalized:
    """Return a summary of customer research.

    The agent attempts to read previously generated artefacts from the
    level 2 customer research agents.  It concatenates their entries
    into a small list of strings.  If no artefacts are present an
    empty list is returned.
    """
    external_customers = _read_artifact("external_new_level2_companies.json")
    internal_customers = _read_artifact("internal_customer_companies.json")
    notes: List[str] = []
    if external_customers:
        notes.append(
            "External research suggests the following potential customers: "
            + ", ".join(external_customers)
        )
    if internal_customers:
        notes.append(
            "Internal records indicate potential customers: "
            + ", ".join(internal_customers)
        )
    return {
        "source": "internal_customer_research",
        "creator": trigger.get("creator"),
        "recipient": trigger.get("recipient"),
        "payload": {
            "customer_notes": notes,
        },
    }